/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IssueTracker;

import ConnectionToDatabase.Cnx;
import java.sql.*;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author user
 */
public class ProjectCreationForm extends javax.swing.JFrame {
    private String userName;
    /**
     * Creates new form ProjectCreationForm
     */
    public ProjectCreationForm() {
        initComponents();
        this.setLocationRelativeTo(null); //to let the form adjust to the center of our computer screen
        
    }
    public ProjectCreationForm(String userName){
        this.userName = userName;
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        createProjectLabel = new javax.swing.JLabel();
        projectNameLabel = new javax.swing.JLabel();
        projectDescriptionLabel = new javax.swing.JLabel();
        projectNameText = new javax.swing.JTextField();
        projectDescriptionText = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        createProjectLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        createProjectLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createProjectLabel.setText("Create Project");

        projectNameLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        projectNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        projectNameLabel.setText("Project Name:");

        projectDescriptionLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        projectDescriptionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        projectDescriptionLabel.setText("Project Description: ");

        projectNameText.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        projectNameText.setForeground(new java.awt.Color(153, 153, 153));
        projectNameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        projectNameText.setText("name");
        projectNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                projectNameTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                projectNameTextFocusLost(evt);
            }
        });

        projectDescriptionText.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        projectDescriptionText.setForeground(new java.awt.Color(153, 153, 153));
        projectDescriptionText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        projectDescriptionText.setText("description");
        projectDescriptionText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                projectDescriptionTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                projectDescriptionTextFocusLost(evt);
            }
        });

        submitButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        homeButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(136, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(createProjectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(195, 195, 195))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(projectDescriptionLabel)
                                .addGap(38, 38, 38))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(projectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(projectNameText)
                            .addComponent(projectDescriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(99, 99, 99))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(230, 230, 230))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(createProjectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(homeButton)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectNameLabel)
                    .addComponent(projectNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectDescriptionLabel)
                    .addComponent(projectDescriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(submitButton)
                .addContainerGap(185, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * method to remove placeholder from name text box
     * @param evt (when the event 'mouse clicked at the name text box ' occurs) 
     */
    private void projectNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectNameTextFocusGained
        
        if(projectNameText.getText().trim().toLowerCase().equals("name")){
            projectNameText.setText(""); // remove placeholder
            projectNameText.setForeground(Color.black); // set the color of the text to be written to black
        }
    }//GEN-LAST:event_projectNameTextFocusGained

    
    /**
     * method to insert placeholder to name text box
     * @param evt (when the event 'cursor removed from name text box ' occurs)
     */
    private void projectNameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectNameTextFocusLost
        
        if(projectNameText.getText().trim().toLowerCase().equals("name")||
                projectNameText.getText().trim().equals("")){
            projectNameText.setText("name"); //set the placeholder for the text box
            projectNameText.setForeground(new Color(153,153,153)); // set the colour of placeholder to be slighly gray/dimmed
        }
    }//GEN-LAST:event_projectNameTextFocusLost

    
    /**
     * method to remove placeholder from description text box
     * @param evt (when the event 'mouse clicked at the name text box ' occurs)
     */
    private void projectDescriptionTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectDescriptionTextFocusGained
        
        if(projectDescriptionText.getText().trim().toLowerCase().equals("description")){
            projectDescriptionText.setText("");
            projectDescriptionText.setForeground(Color.black);
        }
    }//GEN-LAST:event_projectDescriptionTextFocusGained
    
    
    /**
     * method to insert placeholder to description text box
     * @param evt (when the event 'cursor removed from name text box ' occurs)
     */
    private void projectDescriptionTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectDescriptionTextFocusLost
        
        if(projectDescriptionText.getText().trim().toLowerCase().equals("description")||
                projectDescriptionText.getText().trim().equals("")){
            projectDescriptionText.setText("description");
            projectDescriptionText.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_projectDescriptionTextFocusLost

    
    /**
     * method to insert newly created project to the database
     * @param evt (when the event 'button is clicked ' occurs 
     */
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        
        int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to submit?", "Alert!",JOptionPane.YES_NO_OPTION); // prompt dialog panel
        if(option==0){ // if yes
            try{
                String projectName = projectNameText.getText();
                String projectDescription = projectDescriptionText.getText();
                
                if(projectName.trim().equals("")||
                        projectName.trim().toLowerCase().equals("name")){
                    JOptionPane.showMessageDialog(null,"ALERT!\nProject Name cannot be empty"); // output message using dialog panel
                    throw new Exception(""); // abort process to insert the data into database because projectName cannot be null or equal to the placeholder
                }//end if
                
                if(projectDescription.trim().toLowerCase().equals("description"))
                    projectDescription = ""; // set to empty string if it contains the placeholder words

                
                try{

                    Cnx connectionClass = new Cnx(); // create connection 
                    Connection connection = connectionClass.getConnection(); //create connection
                    
                    Statement st1 = connection.createStatement(); // create statement from the established connection
                    Statement st2 = connection.createStatement();
                    String query1 = "SELECT MAX(projectID) FROM project ";   // selecting the highest id currently inside database
                    ResultSet result1 = st1.executeQuery(query1); // execute query1 and store it inside result1
                    result1.next();
                    int projectID = result1.getInt("") + 1; // adding 1 to the highest id inside database and assign it to current projectID to be created
                    
                    String query2 = "INSERT INTO project VALUES ("+projectID+",'"+projectName+"','"+projectDescription+"')"; //query to insert data into database
                    st2.executeUpdate(query2); // execute insertion
                    
                    JOptionPane.showMessageDialog(null, "SUCCESS!\nyou have created a new project!"); // use message dialog panel to tell the user creation is a success
                    ProjectDashboard projectDashboard = new ProjectDashboard(userName); // create ProjectBoard object, to return to homepage/ProjectBoard GUI
                    projectDashboard.setVisible(true); // set ProjectBoard GUI so that it is visible
                    this.dispose(); // dispose the current ProjectCreationForm GUI
                    
                    
                }//end second try
                catch (SQLException ex) {
                    Logger.getLogger(ProjectDashboard.class.getName()).log(Level.SEVERE, null, ex); // print to the console if sql exceptions occurs
                } 
            }//end first try
            catch(Exception e){

            }


        }//end if
            
        
    }//GEN-LAST:event_submitButtonActionPerformed

    
    /**
     * method to return to ProjectDashboard GUI
     * @param evt (when the event 'button is clicked ' occurs) 
     */
    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        
        ProjectDashboard projectDashboard = new ProjectDashboard(userName);
        projectDashboard.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_homeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjectCreationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjectCreationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjectCreationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjectCreationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjectCreationForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel createProjectLabel;
    private javax.swing.JButton homeButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel projectDescriptionLabel;
    private javax.swing.JTextField projectDescriptionText;
    private javax.swing.JLabel projectNameLabel;
    private javax.swing.JTextField projectNameText;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
